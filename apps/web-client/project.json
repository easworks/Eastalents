{
  "name": "web-client",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "prefix": "app",
  "sourceRoot": "apps/web-client/src",
  "tags": [],
  "targets": {
    "build": {
      "executor": "@nx/angular:application",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/web-client",
        "index": "apps/web-client/src/index.html",
        "browser": "apps/web-client/src/main.ts",
        "server": "apps/web-client/src/main.server.ts",
        "ssr": {
          "entry": "apps/web-client/src/server.ts"
        },
        "polyfills": ["@lottiefiles/lottie-player"],
        "tsConfig": "apps/web-client/tsconfig.app.json",
        "webWorkerTsConfig": "apps/web-client/tsconfig.worker.json",
        "assets": [
          {
            "glob": "**/*",
            "input": "libs/shared/assets/src",
            "output": "./assets"
          },
          {
            "glob": "**/*.min.css",
            "input": "node_modules/swiper",
            "ignore": ["**/*-element.min.css", "**/*-bundle.min.css"],
            "output": "assets/swiper"
          },
          "apps/web-client/src/assets"
        ],
        "styles": [
          "libs/shared/styles/src/fonts.css",
          "libs/shared/styles/src/material.scss",
          "apps/web-client/src/styles.less"
        ],
        "scripts": [],
        "statsJson": true,
        "plugins": [
          {
            "path": "tools/esbuild/service-worker.plugin.ts",
            "options": {
              "src": "apps/web-client/src/service-worker/sw.worker.ts",
              "destination": "eastalents-web-client.sw",
              "tsconfig": "apps/web-client/tsconfig.worker.json"
            }
          },
          {
            "path": "tools/esbuild/inject-tw-theme.plugin.ts",
            "options": {
              "configPath": "apps/web-client/tailwind.config.js"
            }
          },
          "tools/custom-nx/src/executors/ng-pack-ssr/esbuild.plugin.ts"
        ]
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "2mb",
              "maximumError": "3mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "8kb",
              "maximumError": "16kb"
            }
          ],
          "outputHashing": "all",
          "optimization": {
            "scripts": true,
            "styles": true,
            "fonts": false
          }
        },
        "development": {
          "optimization": false,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "build-service-worker": {
      "executor": "custom-nx:ng-sw",
      "options": {
        "buildTarget": "web-client:build"
      },
      "dependsOn": ["build"]
    },
    "pack-ssr": {
      "executor": "custom-nx:ng-pack-ssr",
      "options": {
        "buildTarget": "web-client:build"
      },
      "dependsOn": ["build"]
    },
    "serve": {
      "executor": "@nx/angular:dev-server",
      "options": {
        "liveReload": false,
        "hmr": false
      },
      "configurations": {
        "production": {
          "buildTarget": "web-client:build:production"
        },
        "development": {
          "buildTarget": "web-client:build:development"
        }
      },
      "defaultConfiguration": "development"
    },
    "build-tw": {
      "command": "tailwind -o apps/web-client/src/assets/tw.css --config apps/web-client/tailwind.config.js --minify --content ' '"
    },
    "analyze": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["nx build web-client --statsJson"],
        "parallel": false
      }
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "buildTarget": "web-client:build"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "outputs": ["{options.outputFile}"]
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/web-client/jest.config.ts",
        "webWorkerTsConfig": "apps/web-client/tsconfig.worker.json"
      }
    },
    "serve-static": {
      "executor": "@nx/web:file-server",
      "options": {
        "staticFilePath": "dist/apps/web-client/browser",
        "spa": true,
        "buildTarget": "web-client:build"
      }
    },
    "deploy": {
      "executor": "nx:run-commands",
      "options": {
        "args": ["--remote=root@216.225.201.134"],
        "commands": [
          "nx build-service-worker web-client",
          "nx pack-ssr web-client",
          "mkdir -p dist/docker/web-client",
          "tar -czf dist/docker/web-client/dist.tar.gz -C dist/apps web-client",
          "cp apps/web-client/dockerfile dist/docker/web-client",
          "cp apps/web-client/compose.yml dist/docker/web-client",
          "scp -r dist/docker/web-client {args.remote}:~",
          "ssh {args.remote} 'cd ~/web-client && docker compose up -d --build'"
        ],
        "forwardAllArgs": false,
        "parallel": false
      },
      "dependsOn": ["build"]
    }
  }
}
