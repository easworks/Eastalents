@layer base {
  input {
    @apply outline-none;
  }
  
  textarea {
    @apply block w-full h-full outline-none placeholder:text-sm
      pr-1 leading-tight bg-transparent;

    &::-webkit-scrollbar {
      @apply absolute h-1 w-1 rounded-full;
    }

    &::-webkit-scrollbar-thumb {
      @apply rounded bg-black;
    }

    &::-webkit-scrollbar-track {
      @apply rounded bg-divider;
    }

    &::-webkit-scrollbar,
    &::-webkit-scrollbar-corner {
      @apply bg-divider;
    }
  }
}

@layer components {
  .field {
    @apply w-full rounded-md text-sm leading-none p-2
    bg-transparent placeholder:text-gray-500/80 placeholder:text-sm 
    ring-1 ring-divider ring-inset transition-all
    shadow shadow-black/5
    outline-none;

    &:where(:focus), &:where(:hover), &:where(:focus-within) {
      @apply ring-primary-500;
    }

    &:where(:focus), &:where(:focus-within) {
      @apply ring-2;
    }
  }

  .hint {
    @apply text-xs mt-1 px-2 text-gray-500;
  }

  .error {
    @apply text-xs mt-1 px-2 text-red-500;
  }

  .form-field {
    @apply relative mb-8;

    > label {
      @apply block mb-1 text-sm font-semibold;
    }

    > .hint {
      @apply absolute block;
    }

    > .error {
      @apply absolute hidden text-warn-500 transition-all;
    }

    .mat-mdc-select-value {
      @apply transition-all;
    }

    .field-spinner {
      @apply absolute hidden w-6;
    }

    &.show-spinner {
      input,
      .mat-mdc-select-value {
        @apply pr-8;
      }

      .field-spinner {
        @apply block;
      }
    }

    &.disabled {
      > label {
        @apply text-gray-500;
      }

      .field {
        @apply ring-divider bg-surface-container-lowest;
      }
    }
  }
  
  td.form-field {
    .field {
      @apply rounded-none shadow-none h-full w-full;
      border-radius: inherit;
      // border-radius: calc(var(--table-radius) - 1px);
    }

    &:not(.dirty.invalid) {
      .field {
        &:not(:hover:focus:focus-within) {
          @apply ring-0;
        }      
      }
    }
  }
  
  form.ng-submitted .form-field,
  form.ng-touched .form-field.touched,
  td.form-field.dirty {
    &.invalid {
      label {
        @apply text-warn-500;
      }

      .field {
        @apply ring-warn-500/80 placeholder-warn-500;
        --mat-select-placeholder-text-color: theme('colors.warn.500');
      }

      > .error {
        @apply block;

        &:not(:first-of-type) {
          @apply hidden;
        }

        & ~ .hint {
          @apply hidden;
        }
      }
    }
  }

  .selection-counter {
    @apply border rounded p-1 px-2 transition-all;
  
    &.selected {
      @apply bg-primary-500/5 text-primary-500 border-transparent;
    }
  }
  
}

input[type=text],
input[type=number],
input[type=numeric],
input[type=password],
input[type=email],
input[type=time],
input[type=tel],
.mat-mdc-select,
select {
  @apply field;
}

.mat-mdc-select {
  --mat-select-trigger-text-line-height: theme('lineHeight.tight');
  --mat-select-trigger-text-size: theme('fontSize.sm');

  --mat-select-placeholder-text-color: theme('colors.gray.500 / 0.8');

  .mat-mdc-select-arrow-wrapper {
    @apply h-auto;
  }
}

div.mat-mdc-select-panel {
  @apply -ml-2 mt-2;
}

.mat-mdc-select-panel-above {
  .mat-mdc-select-panel {
    @apply !mb-2;
  }
}