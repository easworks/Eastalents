@layer base {
  table {
    @apply text-left text-sm;

    th,
    td {
      @apply text-left;
    }

    tbody {

      tr {
        td {
          @apply border-t;
        }

        &:nth-child(odd) {}

        &:nth-child(even) {}

        &.dotted {
          td {
            border-top-style: dotted;
          }
        }

        &.dashed {
          td {
            border-top-style: dashed;
          }
        }
      }
    }
  }
}

@layer components { 
  .table-container {
    @apply overflow-clip border;

    --table-radius: theme('borderRadius.DEFAULT');

    border-radius: var(--table-radius);

    > .overflow-wrapper {
      @apply overflow-auto;
      border-radius: inherit;
    }

    table {
      @apply min-w-full border-separate border-spacing-0;

      border-radius: inherit;

      :where(th),
      :where(td) {
        @apply p-2;
      }

      tbody {

        tr:last-child {

          td {
            @apply border-b-0;

            &:first-child {
              border-bottom-left-radius: calc(var(--table-radius) - 0px);
            }

            &:last-child {
              border-bottom-right-radius: calc(var(--table-radius) - 0px);
            }
          }
        }
      }
    }
  }

  td {

    &.form-field {
      @apply m-0 p-0 h-0;
      
      .field {
        @apply rounded-none ring-0 shadow-none h-full w-full;
        border-radius: inherit;
        // border-radius: calc(var(--table-radius) - 1px);
        
        &:where(:hover) {
          @apply ring-1;
        }
  
        &:where(:focus),&:where(:focus-within) {
          @apply ring-2;
        }
      }
    }

    &.actions {
      @apply p-0 px-2 w-0;
    }

    &.tags {
      @apply lowercase font-semibold;

      >div {
        @apply flex gap-2 items-center;

        >span {
          @apply rounded px-2;
        }
      }
    }
  }
}